package com.mrityunjay.datastrcture;
/**
 * http://www.geeksforgeeks.org/find-the-largest-subtree-in-a-tree-that-is-also-a-bst/
 * 
 * 
 * 
 * */

class Value {
	 
    int max_size = 0; // for size of largest BST
    boolean is_bst = false;
    int min = Integer.MAX_VALUE;  // For minimum value in right subtree
    int max = Integer.MIN_VALUE;  // For maximum value in left subtree
 
}

public class MaxBinaryTree {
    Node root;
    Value value = new Value();
    int largestBST(Node node){
    	largestBSTUtils(node,value,value,value,value);
    }
	
    int largestBSTUtil(Node node, Value min_ref, Value max_ref,
            Value max_size_ref, Value is_bst_ref) {
    	
		if(node==null){
			is_bst_ref.is_bst=true;
			return 0;
		}
		
		 int min = Integer.MAX_VALUE;
		 boolean left_flag=false;
		 boolean right_flag=false;
		 int ls,rs;
		 max_ref=Integer.MIN_VALUE;
		 
		
		
	}

	public static void main(String[] args) {

	}

}
